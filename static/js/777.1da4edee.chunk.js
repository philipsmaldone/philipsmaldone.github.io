"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[777],{443:function(e,s,i){i(791);var t=i(184);s.Z=function(e){var s=e.image,i=e.caption,a=e.alt;return void 0===a&&(a=i),(0,t.jsxs)("div",{className:"flex flex-col m-2",children:[(0,t.jsx)("img",{src:s,className:"max-w-80 max-h-80 border-sky-700 rounded-md border-b-2\n            ".concat(void 0!==i?" rounded-bl-none":""),alt:a}),(0,t.jsx)("div",{className:"flex rounded-b-lg",children:(0,t.jsx)("p",{className:"mt-0 px-1 text-sm bg-sky-700 rounded-b-sm",children:i})})]})}},777:function(e,s,i){i.r(s);i(791),i(311);var t=i(443),a=i(635),r=i(184);s.default=function(){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h1",{children:"Example Porject"}),(0,r.jsxs)("p",{children:["While writing regression tests for a 3D modeling software, I was faced with the challenge of verifying the state of the modeling canvas. The specific architecture of this web application made the canvas a complete black box to ",(0,r.jsx)("a",{href:"https://www.cypress.io/",children:"Cypress"}),", the testing framework. To overcome this, I implemented visual testing to identify regressions with pixel differences."]}),(0,r.jsxs)("div",{className:"flex flex-wrap gap-8 justify-center",children:[(0,r.jsx)(t.Z,{image:a,caption:"Cube base image"}),(0,r.jsx)(t.Z,{image:a,caption:"Cylinder regression"})]}),(0,r.jsx)(t.Z,{image:a,caption:"Pixel difference highlights the issue"}),(0,r.jsx)("p",{children:"Visual testing takes a screenshot of the test run and compares it to a base image to check for any discrepancies"}),(0,r.jsxs)("p",{children:["I used the ",(0,r.jsx)("a",{href:"https://github.com/mjhea0/cypress-visual-regression",children:"cypress-visual-regression"})," open source plugin for the core of the visual testing logic, and added custom command line arguments for testers to easily interact with the library. "]})]})}},311:function(){}}]);
//# sourceMappingURL=777.1da4edee.chunk.js.map